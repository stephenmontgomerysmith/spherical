void compute_psidot_vl(REAL* psidot, REAL* psi, param_list_t *param) {
  REAL s;
  REAL a2[3][3];
  REAL lambda;
  int i1,i2;
  REAL Dr;

  Dr = param->CI * param->normgamma;

  s = 0;
  tensor2(psi,a2);
  for (i1=0;i1<3;i1++) for (i2=0;i2<3;i2++)
    s += a2[i1][i2]*param->gamm[i1*3+i2];
  lambda = evaluate_string(param->vl_fun,'s',s/param->normgamma);

  @spherical_iterate {
/* Jeffery's Equation */
    psidot[@index] += param->w[0]*@method(psi,0.5*y*dz-0.5*z*dy)
                      + param->w[1]*@method(psi,0.5*z*dx-0.5*x*dz)
                      + param->w[2]*@method(psi,0.5*x*dy-0.5*y*dx)
                      + lambda*param->gamm[0*3+0]*@method(psi,0.5*x*dx)
                      + lambda*param->gamm[0*3+1]*@method(psi,0.5*x*dy+0.5*y*dx)
                      + lambda*param->gamm[0*3+2]*@method(psi,0.5*x*dz+0.5*z*dx)
                      + lambda*param->gamm[1*3+1]*@method(psi,0.5*y*dy)
                      + lambda*param->gamm[1*3+2]*@method(psi,0.5*y*dz+0.5*z*dy)
                      + lambda*param->gamm[2*3+2]*@method(psi,0.5*z*dz)
/* Folgar-Tucker correction */
                      + Dr*@method(psi,dx*dx+dy*dy+dz*dz);
  }
}
