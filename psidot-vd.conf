extern double gamm[3][3];
extern double normgamma;
extern double C1;
extern int max_order;
extern int do_vd;

void compute_psidot_vd(COMPLEX* psidot, COMPLEX* psi) {
  int i1,i2,i3,i4;
  double a2[3][3];
  double a4[3][3][3][3];  double s;
  double Dr2;

  s = 0;
  if (do_vd == 1) {
    tensor2(psi,a2);
    for (i1=0;i1<3;i1++) for (i2=0;i2<3;i2++)
      s += a2[i1][i2]*gamm[i1][i2];
    s = fabs(s);
  } else if (do_vd ==2) {
    tensor4(psi,a4);
    for (i1=0;i1<3;i1++) for (i2=0;i2<3;i2++) for (i3=0;i3<3;i3++) for (i4=0;i4<3;i4++)
      s += a4[i1][i2][i3][i4]*gamm[i1][i2]*gamm[i3][i4];
    s = sqrt(s);
  }
  Dr2 = C1*s;

  @spherical_iterate {
    psidot[ind(l,m)] += Dr2*@method(psi,dx*dx+dy*dy+dz*dz);
  }
}
