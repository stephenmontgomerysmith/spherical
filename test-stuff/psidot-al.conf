extern double w[3];
extern double gamm[3][3];
extern double lambda;
extern double Dr;
extern double kappa;

static COMPLEX *psi1=NULL;

void compute_psidot_al(COMPLEX* psidot, COMPLEX* psi) {

  if (psi1==NULL) psi1 = malloc(sizeof(COMPLEX)*length);
  @spherical_iterate {
    COMPLEX xxxx, xxxy, xxxz, xxyy, xxyz, xxzz, xyyy, xyyz, xyzz, xzzz, yyyy, yyyz, yyzz, yzzz, zzzz;
    xxxx = @method(psi,x*x*x*x);
    xxxy = @method(psi,x*x*x*y);
    xxxz = @method(psi,x*x*x*z);
    xxyy = @method(psi,x*x*y*y);
    xxyz = @method(psi,x*x*y*z);
    xxzz = @method(psi,x*x*z*z);
    xyyy = @method(psi,x*y*y*y);
    xyyz = @method(psi,x*y*y*z);
    xyzz = @method(psi,x*y*z*z);
    xzzz = @method(psi,x*z*z*z);
    yyyy = @method(psi,y*y*y*y);
    yyyz = @method(psi,y*y*y*z);
    yyzz = @method(psi,y*y*z*z);
    yzzz = @method(psi,y*z*z*z);
    zzzz = @method(psi,z*z*z*z);
    psi1[@index] = psi[@index]
      + kappa*(xxxx*pow(gamm[0][0],2) + 4*xxxy*gamm[0][0]*gamm[0][1] + 
               4*xxyy*pow(gamm[0][1],2) + 4*xxxz*gamm[0][0]*gamm[0][2] + 
               8*xxyz*gamm[0][1]*gamm[0][2] + 4*xxzz*pow(gamm[0][2],2) + 
               2*xxyy*gamm[0][0]*gamm[1][1] + 4*xyyy*gamm[0][1]*gamm[1][1] + 
               4*xyyz*gamm[0][2]*gamm[1][1] + yyyy*pow(gamm[1][1],2) + 
               4*xxyz*gamm[0][0]*gamm[1][2] + 8*xyyz*gamm[0][1]*gamm[1][2] + 
               8*xyzz*gamm[0][2]*gamm[1][2] + 4*yyyz*gamm[1][1]*gamm[1][2] + 
               4*yyzz*pow(gamm[1][2],2) + 2*xxzz*gamm[0][0]*gamm[2][2] + 
               4*xyzz*gamm[0][1]*gamm[2][2] + 4*xzzz*gamm[0][2]*gamm[2][2] + 
               2*yyzz*gamm[1][1]*gamm[2][2] + 4*yzzz*gamm[1][2]*gamm[2][2] + 
               zzzz*pow(gamm[2][2],2));
  }

  @spherical_iterate {
    psidot[@index] += lambda*gamm[0][0]*@method(psi1,0.5*x*dx);
    psidot[@index] += lambda*gamm[0][1]*@method(psi1,0.5*x*dy+0.5*y*dx);
    psidot[@index] += lambda*gamm[0][2]*@method(psi1,0.5*x*dz+0.5*z*dx);
    psidot[@index] += lambda*gamm[1][1]*@method(psi1,0.5*y*dy);
    psidot[@index] += lambda*gamm[1][2]*@method(psi1,0.5*y*dz+0.5*z*dy);
    psidot[@index] += lambda*gamm[2][2]*@method(psi1,0.5*z*dz);

    psidot[@index] += w[0]*@method(psi,0.5*y*dz-0.5*z*dy);
    psidot[@index] += w[1]*@method(psi,0.5*z*dx-0.5*x*dz);
    psidot[@index] += w[2]*@method(psi,0.5*x*dy-0.5*y*dx);
/* Folgar-Tucker correction */
    psidot[@index] += Dr*@method(psi,dx*dx+dy*dy+dz*dz);
  }
}
