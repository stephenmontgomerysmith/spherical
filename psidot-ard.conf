extern double gamm[3][3];
extern double normgamma;
extern double b1, b2, b3, b4, b5;

void compute_psidot_ard(COMPLEX* psidot, COMPLEX* psi) {
  double a[3][3], a2[3][3], gamm2[3][3];
  int i1,i2,i3;
  double Dr[3][3];

  tensor2(psi,a);
  memset(a2,0,sizeof(a2));
  memset(gamm2,0,sizeof(gamm2));
  for (i1=0;i1<3;i1++) for (i2=0;i2<3;i2++) for (i3=0;i3<3;i3++) {
    a2[i1][i3] += a[i1][i2]*a[i2][i3];
    gamm2[i1][i3] += gamm[i1][i2]*gamm[i2][i3];
  }
  memset(Dr,0,sizeof(Dr));
  for (i1=0;i1<3;i1++)
    Dr[i1][i1] = b1*normgamma;
  for (i1=0;i1<3;i1++) for (i2=0;i2<3;i2++)
    Dr[i1][i2] += b2*normgamma*a[i1][i2] + b3*normgamma*a2[i1][i2]
                  + b4/2*gamm[i1][i2]
                  + b5/4/normgamma*gamm2[i1][i2];

  @spherical_iterate {
    psidot[@index] += Dr[0][0]*@method(psi,(dx-2*x)*dx)
                      + Dr[0][1]*@method(psi,(dx-2*x)*dy+(dy-2*y)*dx)
                      + Dr[0][2]*@method(psi,(dx-2*x)*dz+(dz-2*z)*dx)
                      + Dr[1][1]*@method(psi,(dy-2*y)*dy)
                      + Dr[1][2]*@method(psi,(dy-2*y)*dz+(dz-2*z)*dy)
                      + Dr[2][2]*@method(psi,(dz-2*z)*dz);
  }
}
